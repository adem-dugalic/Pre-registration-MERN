{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from 'react';\nimport { withContext } from '../core/Context';\nimport { getDisplayName, shouldSelectHint } from '../utils'; // IE doesn't seem to get the composite computed value (eg: 'padding',\n// 'borderStyle', etc.), so generate these from the individual values.\n\nfunction interpolateStyle(styles, attr, subattr) {\n  if (subattr === void 0) {\n    subattr = '';\n  } // Title-case the sub-attribute.\n\n\n  if (subattr) {\n    /* eslint-disable-next-line no-param-reassign */\n    subattr = subattr.replace(subattr[0], subattr[0].toUpperCase());\n  }\n\n  return ['Top', 'Right', 'Bottom', 'Left'].map(function (dir) {\n    return styles[attr + dir + subattr];\n  }).join(' ');\n}\n\nfunction copyStyles(inputNode, hintNode) {\n  if (!inputNode || !hintNode) {\n    return;\n  }\n\n  var inputStyle = window.getComputedStyle(inputNode);\n  /* eslint-disable no-param-reassign */\n\n  hintNode.style.borderStyle = interpolateStyle(inputStyle, 'border', 'style');\n  hintNode.style.borderWidth = interpolateStyle(inputStyle, 'border', 'width');\n  hintNode.style.fontSize = inputStyle.fontSize;\n  hintNode.style.height = inputStyle.height;\n  hintNode.style.lineHeight = inputStyle.lineHeight;\n  hintNode.style.margin = interpolateStyle(inputStyle, 'margin');\n  hintNode.style.padding = interpolateStyle(inputStyle, 'padding');\n  /* eslint-enable no-param-reassign */\n}\n\nfunction hintContainer(Input) {\n  var HintedInput = /*#__PURE__*/function (_React$Component) {\n    _inheritsLoose(HintedInput, _React$Component);\n\n    function HintedInput() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n      _defineProperty(_assertThisInitialized(_this), \"hintRef\", React.createRef());\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n        var _this$props = _this.props,\n            initialItem = _this$props.initialItem,\n            onAdd = _this$props.onAdd,\n            onKeyDown = _this$props.onKeyDown;\n\n        if (shouldSelectHint(e, _this.props)) {\n          e.preventDefault(); // Prevent input from blurring on TAB.\n\n          onAdd(initialItem);\n        }\n\n        onKeyDown(e);\n      });\n\n      return _this;\n    }\n\n    var _proto = HintedInput.prototype;\n\n    _proto.componentDidMount = function componentDidMount() {\n      copyStyles(this.props.inputNode, this.hintRef.current);\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      copyStyles(this.props.inputNode, this.hintRef.current);\n    };\n\n    _proto.render = function render() {\n      var _this$props2 = this.props,\n          forwardedRef = _this$props2.forwardedRef,\n          hintText = _this$props2.hintText,\n          initialItem = _this$props2.initialItem,\n          inputNode = _this$props2.inputNode,\n          onAdd = _this$props2.onAdd,\n          selectHintOnEnter = _this$props2.selectHintOnEnter,\n          props = _objectWithoutPropertiesLoose(_this$props2, [\"forwardedRef\", \"hintText\", \"initialItem\", \"inputNode\", \"onAdd\", \"selectHintOnEnter\"]);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flex: 1,\n          height: '100%',\n          position: 'relative'\n        }\n      }, /*#__PURE__*/React.createElement(Input, _extends({}, props, {\n        onKeyDown: this._handleKeyDown,\n        ref: forwardedRef\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        \"aria-hidden\": true,\n        className: \"rbt-input-hint\",\n        ref: this.hintRef,\n        readOnly: true,\n        style: {\n          backgroundColor: 'transparent',\n          borderColor: 'transparent',\n          boxShadow: 'none',\n          color: 'rgba(0, 0, 0, 0.35)',\n          left: 0,\n          pointerEvents: 'none',\n          position: 'absolute',\n          top: 0,\n          width: '100%'\n        },\n        tabIndex: -1,\n        value: hintText\n      }));\n    };\n\n    return HintedInput;\n  }(React.Component);\n\n  _defineProperty(HintedInput, \"displayName\", \"hintContainer(\" + getDisplayName(Input) + \")\");\n\n  var HintedInputWithContext = withContext(HintedInput, ['hintText', 'initialItem', 'inputNode', 'onAdd', 'selectHintOnEnter']);\n  return React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(HintedInputWithContext, _extends({}, props, {\n      forwardedRef: ref\n    }));\n  });\n}\n\nexport default hintContainer;","map":{"version":3,"sources":["C:/Users/USER/Desktop/online_enrollment-master/node_modules/react-bootstrap-typeahead/es/containers/hintContainer.js"],"names":["_extends","_objectWithoutPropertiesLoose","_assertThisInitialized","_inheritsLoose","_defineProperty","React","withContext","getDisplayName","shouldSelectHint","interpolateStyle","styles","attr","subattr","replace","toUpperCase","map","dir","join","copyStyles","inputNode","hintNode","inputStyle","window","getComputedStyle","style","borderStyle","borderWidth","fontSize","height","lineHeight","margin","padding","hintContainer","Input","HintedInput","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","createRef","e","_this$props","props","initialItem","onAdd","onKeyDown","preventDefault","_proto","prototype","componentDidMount","hintRef","current","componentDidUpdate","render","_this$props2","forwardedRef","hintText","selectHintOnEnter","createElement","display","flex","position","_handleKeyDown","ref","className","readOnly","backgroundColor","borderColor","boxShadow","color","left","pointerEvents","top","width","tabIndex","value","Component","HintedInputWithContext","forwardRef"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from 'react';\nimport { withContext } from '../core/Context';\nimport { getDisplayName, shouldSelectHint } from '../utils';\n\n// IE doesn't seem to get the composite computed value (eg: 'padding',\n// 'borderStyle', etc.), so generate these from the individual values.\nfunction interpolateStyle(styles, attr, subattr) {\n  if (subattr === void 0) {\n    subattr = '';\n  }\n\n  // Title-case the sub-attribute.\n  if (subattr) {\n    /* eslint-disable-next-line no-param-reassign */\n    subattr = subattr.replace(subattr[0], subattr[0].toUpperCase());\n  }\n\n  return ['Top', 'Right', 'Bottom', 'Left'].map(function (dir) {\n    return styles[attr + dir + subattr];\n  }).join(' ');\n}\n\nfunction copyStyles(inputNode, hintNode) {\n  if (!inputNode || !hintNode) {\n    return;\n  }\n\n  var inputStyle = window.getComputedStyle(inputNode);\n  /* eslint-disable no-param-reassign */\n\n  hintNode.style.borderStyle = interpolateStyle(inputStyle, 'border', 'style');\n  hintNode.style.borderWidth = interpolateStyle(inputStyle, 'border', 'width');\n  hintNode.style.fontSize = inputStyle.fontSize;\n  hintNode.style.height = inputStyle.height;\n  hintNode.style.lineHeight = inputStyle.lineHeight;\n  hintNode.style.margin = interpolateStyle(inputStyle, 'margin');\n  hintNode.style.padding = interpolateStyle(inputStyle, 'padding');\n  /* eslint-enable no-param-reassign */\n}\n\nfunction hintContainer(Input) {\n  var HintedInput = /*#__PURE__*/function (_React$Component) {\n    _inheritsLoose(HintedInput, _React$Component);\n\n    function HintedInput() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n      _defineProperty(_assertThisInitialized(_this), \"hintRef\", React.createRef());\n\n      _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n        var _this$props = _this.props,\n            initialItem = _this$props.initialItem,\n            onAdd = _this$props.onAdd,\n            onKeyDown = _this$props.onKeyDown;\n\n        if (shouldSelectHint(e, _this.props)) {\n          e.preventDefault(); // Prevent input from blurring on TAB.\n\n          onAdd(initialItem);\n        }\n\n        onKeyDown(e);\n      });\n\n      return _this;\n    }\n\n    var _proto = HintedInput.prototype;\n\n    _proto.componentDidMount = function componentDidMount() {\n      copyStyles(this.props.inputNode, this.hintRef.current);\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      copyStyles(this.props.inputNode, this.hintRef.current);\n    };\n\n    _proto.render = function render() {\n      var _this$props2 = this.props,\n          forwardedRef = _this$props2.forwardedRef,\n          hintText = _this$props2.hintText,\n          initialItem = _this$props2.initialItem,\n          inputNode = _this$props2.inputNode,\n          onAdd = _this$props2.onAdd,\n          selectHintOnEnter = _this$props2.selectHintOnEnter,\n          props = _objectWithoutPropertiesLoose(_this$props2, [\"forwardedRef\", \"hintText\", \"initialItem\", \"inputNode\", \"onAdd\", \"selectHintOnEnter\"]);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flex: 1,\n          height: '100%',\n          position: 'relative'\n        }\n      }, /*#__PURE__*/React.createElement(Input, _extends({}, props, {\n        onKeyDown: this._handleKeyDown,\n        ref: forwardedRef\n      })), /*#__PURE__*/React.createElement(\"input\", {\n        \"aria-hidden\": true,\n        className: \"rbt-input-hint\",\n        ref: this.hintRef,\n        readOnly: true,\n        style: {\n          backgroundColor: 'transparent',\n          borderColor: 'transparent',\n          boxShadow: 'none',\n          color: 'rgba(0, 0, 0, 0.35)',\n          left: 0,\n          pointerEvents: 'none',\n          position: 'absolute',\n          top: 0,\n          width: '100%'\n        },\n        tabIndex: -1,\n        value: hintText\n      }));\n    };\n\n    return HintedInput;\n  }(React.Component);\n\n  _defineProperty(HintedInput, \"displayName\", \"hintContainer(\" + getDisplayName(Input) + \")\");\n\n  var HintedInputWithContext = withContext(HintedInput, ['hintText', 'initialItem', 'inputNode', 'onAdd', 'selectHintOnEnter']);\n  return React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(HintedInputWithContext, _extends({}, props, {\n      forwardedRef: ref\n    }));\n  });\n}\n\nexport default hintContainer;"]},"metadata":{},"sourceType":"module"}