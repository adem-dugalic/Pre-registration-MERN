{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\USER\\\\Desktop\\\\online_enrollment-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\USER\\\\Desktop\\\\online_enrollment-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\USER\\\\Desktop\\\\online_enrollment-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\USER\\\\Desktop\\\\online_enrollment-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\USER\\\\Desktop\\\\online_enrollment-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import axios from'axios';import{Form,InputGroup,Col,Button,Card,Table}from\"react-bootstrap\";import Cookie from\"js-cookie\";import{Typeahead}from'react-bootstrap-typeahead';var RemoveBtnStyle={'textAlign':'center'};var UserCourses=/*#__PURE__*/function(_Component){_inherits(UserCourses,_Component);var _super=_createSuper(UserCourses);function UserCourses(props){var _this;_classCallCheck(this,UserCourses);_this=_super.call(this,props);_this.onInputChange=_this.onInputChange.bind(_assertThisInitialized(_this));_this.addCourse=_this.addCourse.bind(_assertThisInitialized(_this));_this.onSubmit=_this.onSubmit.bind(_assertThisInitialized(_this));_this.removeCourse=_this.removeCourse.bind(_assertThisInitialized(_this));_this.state={UserCourses:[],options:[],selected:undefined,type:\"Regular\",order:\"Primary\",ref:React.createRef()};return _this;}//Right before anything load the page this is called\n_createClass(UserCourses,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;axios.get('http://localhost:5000/users?token='+Cookie.get('token')+\"&userId=\"+Cookie.get('userId')).then(function(res){_this2.setState({UserCourses:res.data.courses});}).catch(function(err){alert('Error: '+err);});}//InputChange for the course box\n},{key:\"onInputChange\",value:function onInputChange(e){var _this3=this;if(e.length<3)return;axios.get('http://localhost:5000/courses/search?value='+e+'&token='+Cookie.get('token')+\"&userId=\"+Cookie.get('userId')).then(function(res){var options=[];res.data.forEach(function(item,index){options.push({id:item._id,label:item.course_id+' '+item.course_name});});_this3.setState({options:options});}).catch(function(err){alert('Error: '+err);});}},{key:\"removeCourse\",value:function removeCourse(index){console.log(index);this.state.UserCourses.splice(index,1);this.setState({UserCourses:this.state.UserCourses});}},{key:\"addCourse\",value:function addCourse(){if(this.state.selected===undefined)return;this.state.UserCourses.push({order:this.state.order,type:this.state.type,course_id:this.state.selected[0].id,code:this.state.selected[0].label.split(' ')[0]});this.setState({UserCourses:this.state.UserCourses,selected:undefined,options:[]});this.state.ref.current.clear();document.getElementById('coursesSelection');}},{key:\"onSubmit\",value:function onSubmit(e){e.preventDefault();console.log(\"Submitting\");console.log(this.state.UserCourses);var userCourses={userId:Cookie.get('userId'),courses:this.state.UserCourses};console.log(userCourses);axios.post('http://localhost:5000/users/setUserCourses?token='+Cookie.get('token')+\"&userId=\"+Cookie.get('userId'),userCourses).then(function(res){console.log(res);window.location='/UserCourses';}).catch(function(err){alert('Error: '+err);window.location='/UserCourses';});}},{key:\"render\",value:function render(){var _this4=this;return/*#__PURE__*/React.createElement(Card,{style:{width:'80%'},className:\"mx-auto\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\"User courses\"),/*#__PURE__*/React.createElement(Form,{onSubmit:this.onSubmit},/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridEmail\"},/*#__PURE__*/React.createElement(\"fieldset\",{disabled:true},/*#__PURE__*/React.createElement(Form.Label,null,\"User\"),/*#__PURE__*/React.createElement(Form.Control,{placeholder:Cookie.get('userId')})))),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridCourse\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Course\"),/*#__PURE__*/React.createElement(Typeahead,{id:\"coursesSelection\",onInputChange:this.onInputChange,onChange:function onChange(selected){_this4.setState({selected:selected});},options:this.state.options,ref:this.state.ref})),/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridType\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Course type\"),/*#__PURE__*/React.createElement(Form.Control,{as:\"select\",value:this.state.type,onChange:function onChange(e){_this4.setState({type:e.target.value});}},/*#__PURE__*/React.createElement(\"option\",null,\"Regular\"),/*#__PURE__*/React.createElement(\"option\",null,\"Elective\"))),/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridOrder\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Order\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(InputGroup,{className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Control,{as:\"select\",value:this.state.order,onChange:function onChange(e){_this4.setState({order:e.target.value});}},/*#__PURE__*/React.createElement(\"option\",null,\"Primary\"),/*#__PURE__*/React.createElement(\"option\",null,\"Secondary\")),/*#__PURE__*/React.createElement(InputGroup.Append,null,/*#__PURE__*/React.createElement(Button,{variant:\"outline-secondary\",onClick:this.addCourse},\"Add\"))))),/*#__PURE__*/React.createElement(Table,{responsive:true,striped:true,bordered:true,hover:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Code\"),/*#__PURE__*/React.createElement(\"th\",null,\"Type\"),/*#__PURE__*/React.createElement(\"th\",null,\"Order\"),/*#__PURE__*/React.createElement(\"th\",null,\"Options\"))),/*#__PURE__*/React.createElement(\"tbody\",null,this.state.UserCourses.map(function(item,i){return/*#__PURE__*/React.createElement(\"tr\",{key:i},/*#__PURE__*/React.createElement(\"td\",null,item.code),/*#__PURE__*/React.createElement(\"td\",null,item.type),/*#__PURE__*/React.createElement(\"td\",null,item.order),/*#__PURE__*/React.createElement(\"td\",{key:i,style:RemoveBtnStyle},/*#__PURE__*/React.createElement(Button,{variant:\"danger\",onClick:function onClick(){return _this4.removeCourse(i);}},\"Remove\")));}))),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"Save\",className:\"btn btn-primary\"}))));}}]);return UserCourses;}(Component);export{UserCourses as default};","map":{"version":3,"sources":["C:/Users/USER/Desktop/online_enrollment-master/src/components/UserCourses.component.js"],"names":["React","Component","axios","Form","InputGroup","Col","Button","Card","Table","Cookie","Typeahead","RemoveBtnStyle","UserCourses","props","onInputChange","bind","addCourse","onSubmit","removeCourse","state","options","selected","undefined","type","order","ref","createRef","get","then","res","setState","data","courses","catch","err","alert","e","length","forEach","item","index","push","id","_id","label","course_id","course_name","console","log","splice","code","split","current","clear","document","getElementById","preventDefault","userCourses","userId","post","window","location","width","target","value","map","i"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios';\nimport {Form, InputGroup, Col, Button, Card, Table} from \"react-bootstrap\";\nimport Cookie from \"js-cookie\";\nimport {Typeahead} from 'react-bootstrap-typeahead';\n\nconst RemoveBtnStyle = {\n    'textAlign': 'center'\n};\n\nexport default class UserCourses extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onInputChange = this.onInputChange.bind(this);\n        this.addCourse = this.addCourse.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.removeCourse = this.removeCourse.bind(this);\n\n\n        this.state = {\n            UserCourses: [],\n            options: [],\n            selected: undefined,\n            type: \"Regular\",\n            order: \"Primary\",\n            ref: React.createRef()\n        };\n\n    }\n\n    //Right before anything load the page this is called\n    componentDidMount() {\n        axios.get('http://localhost:5000/users?token=' + Cookie.get('token') + \"&userId=\"+Cookie.get('userId'))\n            .then(res => {\n                this.setState({UserCourses:res.data.courses});\n            })\n            .catch((err) => {\n                alert('Error: ' + err);\n            });\n    }\n\n    //InputChange for the course box\n    onInputChange(e) {\n\n        if(e.length<3)\n            return;\n\n        axios.get('http://localhost:5000/courses/search?value=' + e + '&token=' + Cookie.get('token') + \"&userId=\"+Cookie.get('userId'))\n            .then(res => {\n\n                var options = [];\n\n                res.data.forEach((item,index) => {\n                    options.push({id:item._id,label:item.course_id+' ' + item.course_name});\n                });\n                this.setState({options:options});\n\n            })\n            .catch((err) => {\n                alert('Error: ' + err);\n            });\n    }\n\n    removeCourse(index)\n    {\n        console.log(index);\n        this.state.UserCourses.splice(index, 1);\n        this.setState({UserCourses:this.state.UserCourses});\n    }\n\n    addCourse()\n    {\n        if(this.state.selected === undefined)\n            return;\n\n        this.state.UserCourses.push({order:this.state.order,type:this.state.type,course_id:this.state.selected[0].id,code:this.state.selected[0].label.split(' ')[0]});\n        this.setState({\n            UserCourses:this.state.UserCourses,\n            selected: undefined,\n            options: []\n        });\n\n        this.state.ref.current.clear()\n        document.getElementById('coursesSelection')\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        console.log(\"Submitting\");\n        console.log(this.state.UserCourses);\n\n        const userCourses = {\n            userId:Cookie.get('userId'),\n            courses: this.state.UserCourses\n        };\n\n        console.log(userCourses);\n\n        axios.post('http://localhost:5000/users/setUserCourses?token=' + Cookie.get('token') + \"&userId=\"+Cookie.get('userId'),userCourses)\n            .then(res => {\n                console.log(res);\n                window.location = '/UserCourses';\n            })\n            .catch((err) => {\n                alert('Error: ' + err);\n                window.location = '/UserCourses';\n            });\n\n\n    }\n\n    render() {\n        return (\n            <Card style={{ width: '80%' }} className=\"mx-auto\">\n                <Card.Body>\n                    <Card.Title>User courses</Card.Title>\n                        <Form onSubmit={this.onSubmit}>\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <fieldset disabled>\n                                    <Form.Label>User</Form.Label>\n                                    <Form.Control placeholder={Cookie.get('userId')} />\n                                    </fieldset>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Form.Row>\n                                <Form.Group as={Col} controlId=\"formGridCourse\">\n                                    <Form.Label>Course</Form.Label>\n                                    <Typeahead\n                                        id=\"coursesSelection\"\n                                        onInputChange={this.onInputChange}\n                                        onChange={(selected) => {\n                                            this.setState({selected});\n                                        }}\n                                        options={this.state.options}\n                                        ref={this.state.ref}\n                                    />\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridType\">\n                                    <Form.Label>Course type</Form.Label>\n                                    <Form.Control as=\"select\" value={this.state.type} onChange={(e) => {\n                                        this.setState({\n                                            type: e.target.value\n                                        });\n                                    }}>\n                                        <option>Regular</option>\n                                        <option>Elective</option>\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group as={Col} controlId=\"formGridOrder\">\n                                    <Form.Label>Order</Form.Label><br/>\n                                    <InputGroup className=\"mb-3\">\n                                        <Form.Control as=\"select\" value={this.state.order} onChange={(e) => {\n                                            this.setState({\n                                                order: e.target.value\n                                            });\n                                        }}>\n                                            <option>Primary</option>\n                                            <option>Secondary</option>\n                                        </Form.Control>\n                                        <InputGroup.Append>\n                                            <Button variant=\"outline-secondary\" onClick={this.addCourse}>Add</Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                </Form.Group>\n                            </Form.Row>\n\n                            <Table responsive striped bordered hover>\n                                <thead>\n                                <tr>\n                                    <th>Code</th>\n                                    <th>Type</th>\n                                    <th>Order</th>\n                                    <th>Options</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {this.state.UserCourses.map((item, i) => {\n                                    return <tr key={i}>\n                                        <td>{item.code}</td>\n                                        <td>{item.type}</td>\n                                        <td>{item.order}</td>\n                                        <td key={i} style={RemoveBtnStyle} >\n                                        <Button variant=\"danger\" onClick={() => this.removeCourse(i)}>Remove</Button></td>\n                                    </tr>})}\n                                </tbody>\n                            </Table>\n\n                            <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\"/>\n                        </Form>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}