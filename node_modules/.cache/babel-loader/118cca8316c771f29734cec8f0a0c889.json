{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { TypeaheadContext } from './Context';\nimport { getHintText, getInputProps, getInputText, getIsOnlyResult, pick } from '../utils';\nimport { RETURN } from '../constants';\nvar inputPropKeys = ['activeIndex', 'disabled', 'id', 'inputRef', 'isFocused', 'isMenuShown', 'multiple', 'onBlur', 'onChange', 'onFocus', 'onKeyDown', 'placeholder'];\nvar propKeys = ['activeIndex', 'hideMenu', 'isMenuShown', 'labelKey', 'onClear', 'onHide', 'onRemove', 'results', 'selected', 'text', 'toggleMenu'];\nvar typeaheadContextKeys = ['activeIndex', 'id', 'initialItem', 'inputNode', 'onActiveItemChange', 'onAdd', 'onInitialItemChange', 'onMenuItemClick', 'selectHintOnEnter', 'setItem'];\n\nfunction getTypeaheadContextValue(props) {\n  return _extends({}, pick(props, typeaheadContextKeys), {\n    hintText: getHintText(props),\n    isOnlyResult: getIsOnlyResult(props)\n  });\n}\n\nvar TypeaheadManager = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TypeaheadManager, _React$Component);\n\n  function TypeaheadManager() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      var _this$props = _this.props,\n          initialItem = _this$props.initialItem,\n          onKeyDown = _this$props.onKeyDown,\n          onAdd = _this$props.onAdd;\n\n      switch (e.keyCode) {\n        case RETURN:\n          if (initialItem && getIsOnlyResult(_this.props)) {\n            onAdd(initialItem);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      onKeyDown(e);\n    });\n\n    return _this;\n  }\n\n  var _proto = TypeaheadManager.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props2 = this.props,\n        allowNew = _this$props2.allowNew,\n        isMenuShown = _this$props2.isMenuShown,\n        onInitialItemChange = _this$props2.onInitialItemChange,\n        onMenuToggle = _this$props2.onMenuToggle,\n        results = _this$props2.results; // Clear the initial item when there are no results.\n\n    if (!(allowNew || results.length)) {\n      onInitialItemChange(null);\n    }\n\n    if (isMenuShown !== prevProps.isMenuShown) {\n      onMenuToggle(isMenuShown);\n    }\n  };\n\n  _proto.render = function render() {\n    var childProps = _extends({}, pick(this.props, propKeys), {\n      getInputProps: getInputProps(_extends({}, pick(this.props, inputPropKeys), {\n        onKeyDown: this._handleKeyDown,\n        value: getInputText(this.props)\n      }))\n    });\n\n    return /*#__PURE__*/React.createElement(TypeaheadContext.Provider, {\n      value: getTypeaheadContextValue(this.props)\n    }, this.props.children(childProps));\n  };\n\n  return TypeaheadManager;\n}(React.Component);\n\nexport default TypeaheadManager;","map":{"version":3,"sources":["C:/Users/USER/Desktop/online_enrollment-master/node_modules/react-bootstrap-typeahead/es/core/TypeaheadManager.js"],"names":["_assertThisInitialized","_inheritsLoose","_defineProperty","_extends","React","TypeaheadContext","getHintText","getInputProps","getInputText","getIsOnlyResult","pick","RETURN","inputPropKeys","propKeys","typeaheadContextKeys","getTypeaheadContextValue","props","hintText","isOnlyResult","TypeaheadManager","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","e","_this$props","initialItem","onKeyDown","onAdd","keyCode","_proto","prototype","componentDidUpdate","prevProps","_this$props2","allowNew","isMenuShown","onInitialItemChange","onMenuToggle","results","render","childProps","_handleKeyDown","value","createElement","Provider","children","Component"],"mappings":"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","sourcesContent":["import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { TypeaheadContext } from './Context';\nimport { getHintText, getInputProps, getInputText, getIsOnlyResult, pick } from '../utils';\nimport { RETURN } from '../constants';\nvar inputPropKeys = ['activeIndex', 'disabled', 'id', 'inputRef', 'isFocused', 'isMenuShown', 'multiple', 'onBlur', 'onChange', 'onFocus', 'onKeyDown', 'placeholder'];\nvar propKeys = ['activeIndex', 'hideMenu', 'isMenuShown', 'labelKey', 'onClear', 'onHide', 'onRemove', 'results', 'selected', 'text', 'toggleMenu'];\nvar typeaheadContextKeys = ['activeIndex', 'id', 'initialItem', 'inputNode', 'onActiveItemChange', 'onAdd', 'onInitialItemChange', 'onMenuItemClick', 'selectHintOnEnter', 'setItem'];\n\nfunction getTypeaheadContextValue(props) {\n  return _extends({}, pick(props, typeaheadContextKeys), {\n    hintText: getHintText(props),\n    isOnlyResult: getIsOnlyResult(props)\n  });\n}\n\nvar TypeaheadManager = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TypeaheadManager, _React$Component);\n\n  function TypeaheadManager() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      var _this$props = _this.props,\n          initialItem = _this$props.initialItem,\n          onKeyDown = _this$props.onKeyDown,\n          onAdd = _this$props.onAdd;\n\n      switch (e.keyCode) {\n        case RETURN:\n          if (initialItem && getIsOnlyResult(_this.props)) {\n            onAdd(initialItem);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      onKeyDown(e);\n    });\n\n    return _this;\n  }\n\n  var _proto = TypeaheadManager.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props2 = this.props,\n        allowNew = _this$props2.allowNew,\n        isMenuShown = _this$props2.isMenuShown,\n        onInitialItemChange = _this$props2.onInitialItemChange,\n        onMenuToggle = _this$props2.onMenuToggle,\n        results = _this$props2.results; // Clear the initial item when there are no results.\n\n    if (!(allowNew || results.length)) {\n      onInitialItemChange(null);\n    }\n\n    if (isMenuShown !== prevProps.isMenuShown) {\n      onMenuToggle(isMenuShown);\n    }\n  };\n\n  _proto.render = function render() {\n    var childProps = _extends({}, pick(this.props, propKeys), {\n      getInputProps: getInputProps(_extends({}, pick(this.props, inputPropKeys), {\n        onKeyDown: this._handleKeyDown,\n        value: getInputText(this.props)\n      }))\n    });\n\n    return /*#__PURE__*/React.createElement(TypeaheadContext.Provider, {\n      value: getTypeaheadContextValue(this.props)\n    }, this.props.children(childProps));\n  };\n\n  return TypeaheadManager;\n}(React.Component);\n\nexport default TypeaheadManager;"]},"metadata":{},"sourceType":"module"}