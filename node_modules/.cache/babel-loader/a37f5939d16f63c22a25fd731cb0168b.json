{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Children } from 'react';\nimport { BaseMenuItem } from './MenuItem.react';\nimport { checkPropType, isRequiredForA11y } from '../propTypes';\n\nvar MenuDivider = function MenuDivider(props) {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"divider dropdown-divider\",\n    role: \"separator\"\n  });\n};\n\nvar MenuHeader = function MenuHeader(props) {\n  return /*#__PURE__*/React.createElement(\"li\", _extends({}, props, {\n    className: \"dropdown-header\"\n  }));\n};\n\nvar propTypes = {\n  'aria-label': PropTypes.string,\n\n  /**\r\n   * Message to display in the menu if there are no valid results.\r\n   */\n  emptyLabel: PropTypes.node,\n\n  /**\r\n   * Needed for accessibility.\r\n   */\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n\n  /**\r\n   * Maximum height of the dropdown menu.\r\n   */\n  maxHeight: PropTypes.string\n};\nvar defaultProps = {\n  'aria-label': 'menu-options',\n  emptyLabel: 'No matches found.',\n  maxHeight: '300px'\n};\n/**\r\n * Menu component that handles empty state when passed a set of results.\r\n */\n\nvar Menu = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Menu, _React$Component);\n\n  function Menu() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Menu.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props = this.props,\n        inputHeight = _this$props.inputHeight,\n        scheduleUpdate = _this$props.scheduleUpdate; // Update the menu position if the height of the input changes.\n\n    if (inputHeight !== prevProps.inputHeight) {\n      scheduleUpdate();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        className = _this$props2.className,\n        emptyLabel = _this$props2.emptyLabel,\n        id = _this$props2.id,\n        innerRef = _this$props2.innerRef,\n        maxHeight = _this$props2.maxHeight,\n        style = _this$props2.style,\n        text = _this$props2.text;\n    var contents = Children.count(children) === 0 ? /*#__PURE__*/React.createElement(BaseMenuItem, {\n      disabled: true,\n      role: \"option\"\n    }, emptyLabel) : children;\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      \"aria-label\": this.props['aria-label'],\n      className: cx('rbt-menu', 'dropdown-menu', 'show', className),\n      id: id,\n      key: // Force a re-render if the text changes to ensure that menu\n      // positioning updates correctly.\n      text,\n      ref: innerRef,\n      role: \"listbox\",\n      style: _extends({}, style, {\n        display: 'block',\n        maxHeight: maxHeight,\n        overflow: 'auto'\n      })\n    }, contents);\n  };\n\n  return Menu;\n}(React.Component);\n\n_defineProperty(Menu, \"propTypes\", propTypes);\n\n_defineProperty(Menu, \"defaultProps\", defaultProps);\n\n_defineProperty(Menu, \"Divider\", MenuDivider);\n\n_defineProperty(Menu, \"Header\", MenuHeader);\n\nexport default Menu;","map":{"version":3,"sources":["C:/Users/tare9/Desktop/Pre-registration-MERN1/node_modules/react-bootstrap-typeahead/es/components/Menu.react.js"],"names":["_inheritsLoose","_defineProperty","_extends","cx","PropTypes","React","Children","BaseMenuItem","checkPropType","isRequiredForA11y","MenuDivider","props","createElement","className","role","MenuHeader","propTypes","string","emptyLabel","node","id","oneOfType","number","maxHeight","defaultProps","Menu","_React$Component","apply","arguments","_proto","prototype","componentDidUpdate","prevProps","_this$props","inputHeight","scheduleUpdate","render","_this$props2","children","innerRef","style","text","contents","count","disabled","key","ref","display","overflow","Component"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,sCAA3B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,cAAjD;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC5C,SAAO,aAAaN,KAAK,CAACO,aAAN,CAAoB,IAApB,EAA0B;AAC5CC,IAAAA,SAAS,EAAE,0BADiC;AAE5CC,IAAAA,IAAI,EAAE;AAFsC,GAA1B,CAApB;AAID,CALD;;AAOA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBJ,KAApB,EAA2B;AAC1C,SAAO,aAAaN,KAAK,CAACO,aAAN,CAAoB,IAApB,EAA0BV,QAAQ,CAAC,EAAD,EAAKS,KAAL,EAAY;AAChEE,IAAAA,SAAS,EAAE;AADqD,GAAZ,CAAlC,CAApB;AAGD,CAJD;;AAMA,IAAIG,SAAS,GAAG;AACd,gBAAcZ,SAAS,CAACa,MADV;;AAGd;;;AAGAC,EAAAA,UAAU,EAAEd,SAAS,CAACe,IANR;;AAQd;;;AAGAC,EAAAA,EAAE,EAAEZ,aAAa,CAACJ,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACkB,MAAX,EAAmBlB,SAAS,CAACa,MAA7B,CAApB,CAAD,EAA4DR,iBAA5D,CAXH;;AAad;;;AAGAc,EAAAA,SAAS,EAAEnB,SAAS,CAACa;AAhBP,CAAhB;AAkBA,IAAIO,YAAY,GAAG;AACjB,gBAAc,cADG;AAEjBN,EAAAA,UAAU,EAAE,mBAFK;AAGjBK,EAAAA,SAAS,EAAE;AAHM,CAAnB;AAMA;;;;AAGA,IAAIE,IAAI,GAAG,aAAa,UAAUC,gBAAV,EAA4B;AAClD1B,EAAAA,cAAc,CAACyB,IAAD,EAAOC,gBAAP,CAAd;;AAEA,WAASD,IAAT,GAAgB;AACd,WAAOC,gBAAgB,CAACC,KAAjB,CAAuB,IAAvB,EAA6BC,SAA7B,KAA2C,IAAlD;AACD;;AAED,MAAIC,MAAM,GAAGJ,IAAI,CAACK,SAAlB;;AAEAD,EAAAA,MAAM,CAACE,kBAAP,GAA4B,SAASA,kBAAT,CAA4BC,SAA5B,EAAuC;AACjE,QAAIC,WAAW,GAAG,KAAKtB,KAAvB;AAAA,QACIuB,WAAW,GAAGD,WAAW,CAACC,WAD9B;AAAA,QAEIC,cAAc,GAAGF,WAAW,CAACE,cAFjC,CADiE,CAGhB;;AAEjD,QAAID,WAAW,KAAKF,SAAS,CAACE,WAA9B,EAA2C;AACzCC,MAAAA,cAAc;AACf;AACF,GARD;;AAUAN,EAAAA,MAAM,CAACO,MAAP,GAAgB,SAASA,MAAT,GAAkB;AAChC,QAAIC,YAAY,GAAG,KAAK1B,KAAxB;AAAA,QACI2B,QAAQ,GAAGD,YAAY,CAACC,QAD5B;AAAA,QAEIzB,SAAS,GAAGwB,YAAY,CAACxB,SAF7B;AAAA,QAGIK,UAAU,GAAGmB,YAAY,CAACnB,UAH9B;AAAA,QAIIE,EAAE,GAAGiB,YAAY,CAACjB,EAJtB;AAAA,QAKImB,QAAQ,GAAGF,YAAY,CAACE,QAL5B;AAAA,QAMIhB,SAAS,GAAGc,YAAY,CAACd,SAN7B;AAAA,QAOIiB,KAAK,GAAGH,YAAY,CAACG,KAPzB;AAAA,QAQIC,IAAI,GAAGJ,YAAY,CAACI,IARxB;AASA,QAAIC,QAAQ,GAAGpC,QAAQ,CAACqC,KAAT,CAAeL,QAAf,MAA6B,CAA7B,GAAiC,aAAajC,KAAK,CAACO,aAAN,CAAoBL,YAApB,EAAkC;AAC7FqC,MAAAA,QAAQ,EAAE,IADmF;AAE7F9B,MAAAA,IAAI,EAAE;AAFuF,KAAlC,EAG1DI,UAH0D,CAA9C,GAGEoB,QAHjB;AAIA,WAAO,aAAajC,KAAK,CAACO,aAAN,CAAoB,IAApB,EAA0B;AAC5C,oBAAc,KAAKD,KAAL,CAAW,YAAX,CAD8B;AAE5CE,MAAAA,SAAS,EAAEV,EAAE,CAAC,UAAD,EAAa,eAAb,EAA8B,MAA9B,EAAsCU,SAAtC,CAF+B;AAG5CO,MAAAA,EAAE,EAAEA,EAHwC;AAI5CyB,MAAAA,GAAG,EAAE;AACL;AACAJ,MAAAA,IAN4C;AAO5CK,MAAAA,GAAG,EAAEP,QAPuC;AAQ5CzB,MAAAA,IAAI,EAAE,SARsC;AAS5C0B,MAAAA,KAAK,EAAEtC,QAAQ,CAAC,EAAD,EAAKsC,KAAL,EAAY;AACzBO,QAAAA,OAAO,EAAE,OADgB;AAEzBxB,QAAAA,SAAS,EAAEA,SAFc;AAGzByB,QAAAA,QAAQ,EAAE;AAHe,OAAZ;AAT6B,KAA1B,EAcjBN,QAdiB,CAApB;AAeD,GA7BD;;AA+BA,SAAOjB,IAAP;AACD,CAnDuB,CAmDtBpB,KAAK,CAAC4C,SAnDgB,CAAxB;;AAqDAhD,eAAe,CAACwB,IAAD,EAAO,WAAP,EAAoBT,SAApB,CAAf;;AAEAf,eAAe,CAACwB,IAAD,EAAO,cAAP,EAAuBD,YAAvB,CAAf;;AAEAvB,eAAe,CAACwB,IAAD,EAAO,SAAP,EAAkBf,WAAlB,CAAf;;AAEAT,eAAe,CAACwB,IAAD,EAAO,QAAP,EAAiBV,UAAjB,CAAf;;AAEA,eAAeU,IAAf","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\r\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\r\nimport _extends from \"@babel/runtime/helpers/extends\";\r\nimport cx from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Children } from 'react';\r\nimport { BaseMenuItem } from './MenuItem.react';\r\nimport { checkPropType, isRequiredForA11y } from '../propTypes';\r\n\r\nvar MenuDivider = function MenuDivider(props) {\r\n  return /*#__PURE__*/React.createElement(\"li\", {\r\n    className: \"divider dropdown-divider\",\r\n    role: \"separator\"\r\n  });\r\n};\r\n\r\nvar MenuHeader = function MenuHeader(props) {\r\n  return /*#__PURE__*/React.createElement(\"li\", _extends({}, props, {\r\n    className: \"dropdown-header\"\r\n  }));\r\n};\r\n\r\nvar propTypes = {\r\n  'aria-label': PropTypes.string,\r\n\r\n  /**\r\n   * Message to display in the menu if there are no valid results.\r\n   */\r\n  emptyLabel: PropTypes.node,\r\n\r\n  /**\r\n   * Needed for accessibility.\r\n   */\r\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\r\n\r\n  /**\r\n   * Maximum height of the dropdown menu.\r\n   */\r\n  maxHeight: PropTypes.string\r\n};\r\nvar defaultProps = {\r\n  'aria-label': 'menu-options',\r\n  emptyLabel: 'No matches found.',\r\n  maxHeight: '300px'\r\n};\r\n\r\n/**\r\n * Menu component that handles empty state when passed a set of results.\r\n */\r\nvar Menu = /*#__PURE__*/function (_React$Component) {\r\n  _inheritsLoose(Menu, _React$Component);\r\n\r\n  function Menu() {\r\n    return _React$Component.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = Menu.prototype;\r\n\r\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\r\n    var _this$props = this.props,\r\n        inputHeight = _this$props.inputHeight,\r\n        scheduleUpdate = _this$props.scheduleUpdate; // Update the menu position if the height of the input changes.\r\n\r\n    if (inputHeight !== prevProps.inputHeight) {\r\n      scheduleUpdate();\r\n    }\r\n  };\r\n\r\n  _proto.render = function render() {\r\n    var _this$props2 = this.props,\r\n        children = _this$props2.children,\r\n        className = _this$props2.className,\r\n        emptyLabel = _this$props2.emptyLabel,\r\n        id = _this$props2.id,\r\n        innerRef = _this$props2.innerRef,\r\n        maxHeight = _this$props2.maxHeight,\r\n        style = _this$props2.style,\r\n        text = _this$props2.text;\r\n    var contents = Children.count(children) === 0 ? /*#__PURE__*/React.createElement(BaseMenuItem, {\r\n      disabled: true,\r\n      role: \"option\"\r\n    }, emptyLabel) : children;\r\n    return /*#__PURE__*/React.createElement(\"ul\", {\r\n      \"aria-label\": this.props['aria-label'],\r\n      className: cx('rbt-menu', 'dropdown-menu', 'show', className),\r\n      id: id,\r\n      key: // Force a re-render if the text changes to ensure that menu\r\n      // positioning updates correctly.\r\n      text,\r\n      ref: innerRef,\r\n      role: \"listbox\",\r\n      style: _extends({}, style, {\r\n        display: 'block',\r\n        maxHeight: maxHeight,\r\n        overflow: 'auto'\r\n      })\r\n    }, contents);\r\n  };\r\n\r\n  return Menu;\r\n}(React.Component);\r\n\r\n_defineProperty(Menu, \"propTypes\", propTypes);\r\n\r\n_defineProperty(Menu, \"defaultProps\", defaultProps);\r\n\r\n_defineProperty(Menu, \"Divider\", MenuDivider);\r\n\r\n_defineProperty(Menu, \"Header\", MenuHeader);\r\n\r\nexport default Menu;"]},"metadata":{},"sourceType":"module"}